{"ast":null,"code":"var _jsxFileName = \"/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/subComponents/LanguageButton.js\",\n  _s = $RefreshSig$();\n// LanguageButton.js\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLanguage } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguageButton() {\n  _s();\n  const dispatch = useDispatch();\n  const language = useSelector(state => state.language);\n  let newLanguage;\n  function changeLanguage() {\n    if (language === 'English') {\n      newLanguage = 'French';\n    } else if (language === 'French') {\n      newLanguage = 'Spanish';\n    } else {\n      newLanguage = 'English';\n    }\n    dispatch(setLanguage(newLanguage));\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: changeLanguage,\n    children: [\"Change Language (Current: \", language, \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(LanguageButton, \"NahXDxQJrvkTVkcNPX5bvmaG0nI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LanguageButton;\n;\nexport default LanguageButton;\nvar _c;\n$RefreshReg$(_c, \"LanguageButton\");","map":{"version":3,"names":["React","useDispatch","useSelector","setLanguage","jsxDEV","_jsxDEV","LanguageButton","_s","dispatch","language","state","newLanguage","changeLanguage","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/subComponents/LanguageButton.js"],"sourcesContent":["// LanguageButton.js\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLanguage } from '../redux/actions';\n\n\nfunction LanguageButton() {\n    const dispatch = useDispatch();\n    const language = useSelector(state => state.language);\n\n    let newLanguage;\n   function changeLanguage()  {\n        if (language === 'English') {\n            newLanguage = 'French';\n        } else if (language === 'French') {\n            newLanguage = 'Spanish';\n        } else {\n            newLanguage = 'English';\n        }\n        dispatch(setLanguage(newLanguage));\n    }\n\n    return (\n        <button onClick={changeLanguage}>\n            Change Language (Current: {language})\n        </button>\n    );\n};\n\nexport default LanguageButton;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,QAAQ,CAAC;EAErD,IAAIE,WAAW;EAChB,SAASC,cAAcA,CAAA,EAAI;IACtB,IAAIH,QAAQ,KAAK,SAAS,EAAE;MACxBE,WAAW,GAAG,QAAQ;IAC1B,CAAC,MAAM,IAAIF,QAAQ,KAAK,QAAQ,EAAE;MAC9BE,WAAW,GAAG,SAAS;IAC3B,CAAC,MAAM;MACHA,WAAW,GAAG,SAAS;IAC3B;IACAH,QAAQ,CAACL,WAAW,CAACQ,WAAW,CAAC,CAAC;EACtC;EAEA,oBACIN,OAAA;IAAQQ,OAAO,EAAED,cAAe;IAAAE,QAAA,GAAC,4BACH,EAACL,QAAQ,EAAC,GACxC;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEjB;AAACX,EAAA,CArBQD,cAAc;EAAA,QACFL,WAAW,EACXC,WAAW;AAAA;AAAAiB,EAAA,GAFvBb,cAAc;AAqBtB;AAED,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}