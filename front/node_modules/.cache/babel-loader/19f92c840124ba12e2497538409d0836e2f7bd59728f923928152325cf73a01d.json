{"ast":null,"code":"var _jsxFileName = \"/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/LowerZoneComponents/QrCode.js\",\n  _s = $RefreshSig$();\nimport \"../componentsStyles/LowerZone.css\";\nimport \"../componentsStyles/QrCodeStyle.css\";\nimport imageQR from '../images/imageQrCodeExample.png';\nimport { useActualDict } from '../constants/Translations';\nimport axios from 'axios';\nimport apiService from '../Controller/apiService.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SET_CLIENT, SET_NAME, SET_SURNAME } from '../redux/actions';\nimport '../redux/reducers.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QrCode() {\n  _s();\n  const client = useSelector(state => state.client);\n  const name = useSelector(state => state.name);\n  const surname = useSelector(state => state.surname);\n  const email = useSelector(state => state.email);\n  const [qrCode, setQrCode] = useState('');\n  const ClientComponent = () => {\n    const handleGetQrCode = async () => {\n      try {\n        if (!qrCode || client.isLogged === false) {\n          alert('You must be logged in to get a QR Code.');\n          return;\n        }\n        const response = await apiService.getQRCode(qrCode);\n        setQrCode(response.data);\n        const qrCode = {\n          name,\n          surname,\n          email,\n          password\n        };\n        console.log('Client created:', response.data);\n      } catch (error) {\n        console.error('Error creating client:', error);\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: name.qrCode,\n      alt: \"QR Code\",\n      className: \"qrcode-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button-itself\",\n        children: \"Display QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button-itself\",\n        children: \"Print Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(QrCode, \"YVTsYet4AHuN29GlSWjI8b7Hc38=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n_c = QrCode;\nexport default QrCode;\nvar _c;\n$RefreshReg$(_c, \"QrCode\");","map":{"version":3,"names":["imageQR","useActualDict","axios","apiService","useSelector","useDispatch","SET_CLIENT","SET_NAME","SET_SURNAME","jsxDEV","_jsxDEV","QrCode","_s","client","state","name","surname","email","qrCode","setQrCode","useState","ClientComponent","handleGetQrCode","isLogged","alert","response","getQRCode","data","password","console","log","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/LowerZoneComponents/QrCode.js"],"sourcesContent":["import \"../componentsStyles/LowerZone.css\";\nimport \"../componentsStyles/QrCodeStyle.css\";\nimport imageQR from '../images/imageQrCodeExample.png';\n\nimport {useActualDict} from '../constants/Translations';\n\nimport axios from 'axios';\nimport apiService from '../Controller/apiService.js';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SET_CLIENT, SET_NAME, SET_SURNAME } from '../redux/actions';\nimport '../redux/reducers.js';\n\nfunction QrCode() {\n\n    const client = useSelector(state => state.client);\n    const name = useSelector(state => state.name);\n    const surname = useSelector(state => state.surname);\n    const email = useSelector(state => state.email);\n    const [qrCode, setQrCode] = useState('');\n\n    const ClientComponent = () => {\n\n        const handleGetQrCode = async () => {\n            try {\n                if ((!qrCode) || (client.isLogged === false)) {\n                    alert('You must be logged in to get a QR Code.');\n                    return;\n                }\n                const response = await apiService.getQRCode(qrCode);\n                setQrCode(response.data);\n                const qrCode = {name, surname, email, password};\n                console.log('Client created:', response.data);\n            } catch (error) {\n                console.error('Error creating client:', error);\n            }\n        }\n    }\n\n        return (\n\n        <div className='form-container'>\n            <img src={name.qrCode} alt=\"QR Code\" className=\"qrcode-container\"/>\n            <div className='button-container'>\n                <button type='submit' className='button-itself'>Display QR Code</button>\n                <button type='submit' className='button-itself'>Print Ticket</button>\n            </div>\n        </div>\n    );\n}\n\nexport default QrCode;\n"],"mappings":";;AAAA,OAAO,mCAAmC;AAC1C,OAAO,qCAAqC;AAC5C,OAAOA,OAAO,MAAM,kCAAkC;AAEtD,SAAQC,aAAa,QAAO,2BAA2B;AAEvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,6BAA6B;AAEpD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACpE,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAMC,MAAM,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,MAAM,CAAC;EACjD,MAAME,IAAI,GAAGX,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAC7C,MAAMC,OAAO,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACE,OAAO,CAAC;EACnD,MAAMC,KAAK,GAAGb,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACG,KAAK,CAAC;EAC/C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAE1B,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,IAAK,CAACJ,MAAM,IAAML,MAAM,CAACU,QAAQ,KAAK,KAAM,EAAE;UAC1CC,KAAK,CAAC,yCAAyC,CAAC;UAChD;QACJ;QACA,MAAMC,QAAQ,GAAG,MAAMtB,UAAU,CAACuB,SAAS,CAACR,MAAM,CAAC;QACnDC,SAAS,CAACM,QAAQ,CAACE,IAAI,CAAC;QACxB,MAAMT,MAAM,GAAG;UAACH,IAAI;UAAEC,OAAO;UAAEC,KAAK;UAAEW;QAAQ,CAAC;QAC/CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEL,QAAQ,CAACE,IAAI,CAAC;MACjD,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;EACL,CAAC;EAEG,oBAEArB,OAAA;IAAKsB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BvB,OAAA;MAAKwB,GAAG,EAAEnB,IAAI,CAACG,MAAO;MAACiB,GAAG,EAAC,SAAS;MAACH,SAAS,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnE7B,OAAA;MAAKsB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BvB,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxE7B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC3B,EAAA,CApCQD,MAAM;EAAA,QAEIP,WAAW,EACbA,WAAW,EACRA,WAAW,EACbA,WAAW;AAAA;AAAAqC,EAAA,GALpB9B,MAAM;AAsCf,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}