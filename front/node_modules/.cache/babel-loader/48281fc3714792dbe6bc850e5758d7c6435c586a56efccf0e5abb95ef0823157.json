{"ast":null,"code":"import\"../componentsStyles/LowerZone.css\";import\"../componentsStyles/QrCodeStyle.css\";import imageQR from'../images/imageQrCodeExample.png';import{useSelector}from'react-redux';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function QrCode(){const name=useSelector(state=>state.name);const surname=useSelector(state=>state.surname);const email=useSelector(state=>state.email);const isLogged=useSelector(state=>state.login);// Correction : renommer en isLogged pour plus de clarté\nlet qrCode=null;// this is a mockup, the real qrCode will be fetched from the backend\n// Function to handle QR Code fetching\nconst handleGetQrCode=async()=>{try{if(qrCode===null||!isLogged){alert('You must be logged in to get a QR Code. You also need to have bought a ticket.');}else{console.log('Here is your qrCode');// Logic to fetch and display QR code from backend\n}}catch(error){console.error('Error fetching QR Code:',error);}};// Function to display the ticket\nconst displayTicket=()=>{alert('Displaying ticket');};// Function to print the ticket\nconst printTicket=()=>{alert('Printing ticket');};return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:imageQR,alt:\"QR Code\",className:\"qrcode-container\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\"// Correction : type should be 'button' to prevent form submission behavior\n,className:\"button-itself\",onClick:displayTicket,children:\"Display QR Code\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\"// Correction : type should be 'button' to prevent form submission behavior\n,className:\"button-itself\",onClick:printTicket,children:\"Print Ticket\"})]})]});}export default QrCode;","map":{"version":3,"names":["imageQR","useSelector","jsx","_jsx","jsxs","_jsxs","QrCode","name","state","surname","email","isLogged","login","qrCode","handleGetQrCode","alert","console","log","error","displayTicket","printTicket","className","children","src","alt","type","onClick"],"sources":["/Users/fabienduval/IdeaProjects/front/src/LowerZoneComponents/QrCode.js"],"sourcesContent":["import \"../componentsStyles/LowerZone.css\";\nimport \"../componentsStyles/QrCodeStyle.css\";\nimport imageQR from '../images/imageQrCodeExample.png';\n\nimport { useSelector } from 'react-redux';\n\nfunction QrCode() {\n\n    const name = useSelector(state => state.name);\n    const surname = useSelector(state => state.surname);\n    const email = useSelector(state => state.email);\n    const isLogged = useSelector(state => state.login); // Correction : renommer en isLogged pour plus de clarté\n\n    let qrCode = null; // this is a mockup, the real qrCode will be fetched from the backend\n\n    // Function to handle QR Code fetching\n    const handleGetQrCode = async () => {\n        try {\n            if (qrCode === null || !isLogged) {\n                alert('You must be logged in to get a QR Code. You also need to have bought a ticket.');\n            } else {\n                console.log('Here is your qrCode');\n                // Logic to fetch and display QR code from backend\n            }\n        } catch (error) {\n            console.error('Error fetching QR Code:', error);\n        }\n    };\n\n    // Function to display the ticket\n    const displayTicket = () => {\n        alert('Displaying ticket');\n    };\n\n    // Function to print the ticket\n    const printTicket = () => {\n        alert('Printing ticket');\n    };\n\n    return (\n        <div className='form-container'>\n            <img src={imageQR} alt=\"QR Code\" className=\"qrcode-container\" />\n            <div className='button-container'>\n                <button type='button' // Correction : type should be 'button' to prevent form submission behavior\n                        className='button-itself'\n                        onClick={displayTicket}>Display QR Code</button>\n\n                <button type='button' // Correction : type should be 'button' to prevent form submission behavior\n                        className='button-itself'\n                        onClick={printTicket}>Print Ticket</button>\n            </div>\n        </div>\n    );\n}\n\nexport default QrCode;"],"mappings":"AAAA,MAAO,mCAAmC,CAC1C,MAAO,qCAAqC,CAC5C,MAAO,CAAAA,OAAO,KAAM,kCAAkC,CAEtD,OAASC,WAAW,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1C,QAAS,CAAAC,MAAMA,CAAA,CAAG,CAEd,KAAM,CAAAC,IAAI,CAAGN,WAAW,CAACO,KAAK,EAAIA,KAAK,CAACD,IAAI,CAAC,CAC7C,KAAM,CAAAE,OAAO,CAAGR,WAAW,CAACO,KAAK,EAAIA,KAAK,CAACC,OAAO,CAAC,CACnD,KAAM,CAAAC,KAAK,CAAGT,WAAW,CAACO,KAAK,EAAIA,KAAK,CAACE,KAAK,CAAC,CAC/C,KAAM,CAAAC,QAAQ,CAAGV,WAAW,CAACO,KAAK,EAAIA,KAAK,CAACI,KAAK,CAAC,CAAE;AAEpD,GAAI,CAAAC,MAAM,CAAG,IAAI,CAAE;AAEnB;AACA,KAAM,CAAAC,eAAe,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACA,GAAID,MAAM,GAAK,IAAI,EAAI,CAACF,QAAQ,CAAE,CAC9BI,KAAK,CAAC,gFAAgF,CAAC,CAC3F,CAAC,IAAM,CACHC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClC;AACJ,CACJ,CAAE,MAAOC,KAAK,CAAE,CACZF,OAAO,CAACE,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACnD,CACJ,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CACxBJ,KAAK,CAAC,mBAAmB,CAAC,CAC9B,CAAC,CAED;AACA,KAAM,CAAAK,WAAW,CAAGA,CAAA,GAAM,CACtBL,KAAK,CAAC,iBAAiB,CAAC,CAC5B,CAAC,CAED,mBACIV,KAAA,QAAKgB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3BnB,IAAA,QAAKoB,GAAG,CAAEvB,OAAQ,CAACwB,GAAG,CAAC,SAAS,CAACH,SAAS,CAAC,kBAAkB,CAAE,CAAC,cAChEhB,KAAA,QAAKgB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7BnB,IAAA,WAAQsB,IAAI,CAAC,QAAS;AAAA,CACdJ,SAAS,CAAC,eAAe,CACzBK,OAAO,CAAEP,aAAc,CAAAG,QAAA,CAAC,iBAAe,CAAQ,CAAC,cAExDnB,IAAA,WAAQsB,IAAI,CAAC,QAAS;AAAA,CACdJ,SAAS,CAAC,eAAe,CACzBK,OAAO,CAAEN,WAAY,CAAAE,QAAA,CAAC,cAAY,CAAQ,CAAC,EAClD,CAAC,EACL,CAAC,CAEd,CAEA,cAAe,CAAAhB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}