{"ast":null,"code":"// AuthButton.js\nimport React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{userReducer}from'../redux/loginSlice';import{jsx as _jsx}from\"react/jsx-runtime\";function AuthButton(){const dispatch=useDispatch();const isLogged=useSelector(state=>state.user.isLogged);const[buttonColor,setButtonColor]=useState('red');const[buttonText,setButtonText]=useState('Disconnected');console.log('isLogged after useSelector:',isLogged);useEffect(()=>{if(isLogged===false||isLogged===undefined){setButtonColor('green');setButtonText('Connected');}else{setButtonColor('red');setButtonText('Disconnected');}},[isLogged]);function changeLogged(){dispatch(userReducer());console.log('isLogged after dispatch',isLogged);}return/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:buttonColor,color:'white',border:'none',padding:'10px 20px',cursor:'pointer'},onClick:changeLogged,children:buttonText});}export default AuthButton;","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","userReducer","jsx","_jsx","AuthButton","dispatch","isLogged","state","user","buttonColor","setButtonColor","buttonText","setButtonText","console","log","undefined","changeLogged","style","backgroundColor","color","border","padding","cursor","onClick","children"],"sources":["/Users/fabienduval/IdeaProjects/front/src/subComponents/AuthButton.js"],"sourcesContent":["// AuthButton.js\nimport React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {userReducer} from '../redux/loginSlice';\n\nfunction AuthButton() {\n    const dispatch = useDispatch();\n    const isLogged = useSelector(state => state.user.isLogged);\n    const [buttonColor, setButtonColor] = useState('red');\n    const [buttonText, setButtonText] = useState('Disconnected');\n    console.log('isLogged after useSelector:', isLogged);\n\n    useEffect(() => {\n        if (isLogged === false || isLogged === undefined) {\n            setButtonColor('green');\n            setButtonText('Connected');\n        } else {\n            setButtonColor('red');\n            setButtonText('Disconnected');\n        }\n    }, [isLogged]);\n\n    function changeLogged() {\n        dispatch(userReducer());\n        console.log('isLogged after dispatch',isLogged);\n    }\n\n    return(\n        <button\n            style={{\n                backgroundColor: buttonColor,\n                color: 'white',\n                border: 'none',\n                padding: '10px 20px',\n                cursor: 'pointer'\n            }}\n\n            onClick={changeLogged}\n        >\n            {buttonText}\n        </button>\n    );\n}\n\nexport default AuthButton;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAChD,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAAQC,WAAW,KAAO,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhD,QAAS,CAAAC,UAAUA,CAAA,CAAG,CAClB,KAAM,CAAAC,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAO,QAAQ,CAAGN,WAAW,CAACO,KAAK,EAAIA,KAAK,CAACC,IAAI,CAACF,QAAQ,CAAC,CAC1D,KAAM,CAACG,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACc,UAAU,CAAEC,aAAa,CAAC,CAAGf,QAAQ,CAAC,cAAc,CAAC,CAC5DgB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAER,QAAQ,CAAC,CAEpDR,SAAS,CAAC,IAAM,CACZ,GAAIQ,QAAQ,GAAK,KAAK,EAAIA,QAAQ,GAAKS,SAAS,CAAE,CAC9CL,cAAc,CAAC,OAAO,CAAC,CACvBE,aAAa,CAAC,WAAW,CAAC,CAC9B,CAAC,IAAM,CACHF,cAAc,CAAC,KAAK,CAAC,CACrBE,aAAa,CAAC,cAAc,CAAC,CACjC,CACJ,CAAC,CAAE,CAACN,QAAQ,CAAC,CAAC,CAEd,QAAS,CAAAU,YAAYA,CAAA,CAAG,CACpBX,QAAQ,CAACJ,WAAW,CAAC,CAAC,CAAC,CACvBY,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAACR,QAAQ,CAAC,CACnD,CAEA,mBACIH,IAAA,WACIc,KAAK,CAAE,CACHC,eAAe,CAAET,WAAW,CAC5BU,KAAK,CAAE,OAAO,CACdC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,WAAW,CACpBC,MAAM,CAAE,SACZ,CAAE,CAEFC,OAAO,CAAEP,YAAa,CAAAQ,QAAA,CAErBb,UAAU,CACP,CAAC,CAEjB,CAEA,cAAe,CAAAP,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}