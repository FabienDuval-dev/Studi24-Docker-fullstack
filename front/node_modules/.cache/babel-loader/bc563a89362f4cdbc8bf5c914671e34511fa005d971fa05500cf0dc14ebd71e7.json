{"ast":null,"code":"var _jsxFileName = \"/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/LowerZoneComponents/Discovery.js\",\n  _s = $RefreshSig$();\nimport \"../componentsStyles/LowerZone.css\";\nimport { useActualDict } from '../constants/Translations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login, logout, setLanguage, selectIsLogged, selectLanguage } from '../redux/authSlice';\nimport Translations from \"../constants/Translations\";\nimport languageSlice from '../redux/languageSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Discovery() {\n  _s();\n  let theLanguage = useSelector(selectLanguage);\n  let dict = Translations();\n\n  // Witch language ? So witch dictionary ?\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: dict['discoveryTextD']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Discovery, \"pHeXHSXMQ6QH/K+trLe6z1RvMRc=\", false, function () {\n  return [useSelector];\n});\n_c = Discovery;\nexport default Discovery;\nvar _c;\n$RefreshReg$(_c, \"Discovery\");","map":{"version":3,"names":["useActualDict","useSelector","useDispatch","login","logout","setLanguage","selectIsLogged","selectLanguage","Translations","languageSlice","jsxDEV","_jsxDEV","Discovery","_s","theLanguage","dict","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/LowerZoneComponents/Discovery.js"],"sourcesContent":["import \"../componentsStyles/LowerZone.css\";\n\nimport {useActualDict} from '../constants/Translations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login, logout, setLanguage, selectIsLogged, selectLanguage } from '../redux/authSlice';\n\nimport Translations from \"../constants/Translations\";\nimport languageSlice from '../redux/languageSlice';\n\nfunction Discovery() {\n\n    let theLanguage = useSelector(selectLanguage);\n    let dict = Translations();\n\n    // Witch language ? So witch dictionary ?\n\n    return (\n        <div className=\"content-container\">\n            <p>{ dict['discoveryTextD'] }</p>\n        </div>\n    );\n}\n\nexport default Discovery;\n\n"],"mappings":";;AAAA,OAAO,mCAAmC;AAE1C,SAAQA,aAAa,QAAO,2BAA2B;AACvD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,EAAEC,cAAc,EAAEC,cAAc,QAAQ,oBAAoB;AAE/F,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEjB,IAAIC,WAAW,GAAGb,WAAW,CAACM,cAAc,CAAC;EAC7C,IAAIQ,IAAI,GAAGP,YAAY,CAAC,CAAC;;EAEzB;;EAEA,oBACIG,OAAA;IAAKK,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9BN,OAAA;MAAAM,QAAA,EAAKF,IAAI,CAAC,gBAAgB;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEd;AAACR,EAAA,CAZQD,SAAS;EAAA,QAEIX,WAAW;AAAA;AAAAqB,EAAA,GAFxBV,SAAS;AAclB,eAAeA,SAAS;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}