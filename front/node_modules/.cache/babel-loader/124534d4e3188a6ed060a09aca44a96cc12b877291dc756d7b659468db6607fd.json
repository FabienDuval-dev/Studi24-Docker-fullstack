{"ast":null,"code":"var _jsxFileName = \"/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/LowerZoneComponents/Discovery.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport \"../componentsStyles/LowerZone.css\";\nimport { useSelector } from 'react-redux';\nimport { LanguageContext } from \"../contexts/LanguageContext\";\nimport Translations from \"../constants/Translations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Discovery() {\n  _s();\n  console.log('We are in Discovery');\n  const {\n    language\n  } = useContext(LanguageContext);\n  console.log(language);\n  const dict = Translations(language);\n\n  // Witch language ? So witch dictionary ?\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-container\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", dict.discoveryTextD, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(Discovery, \"+i3Zjy6jUH157tb+1+BECHVnF2s=\");\n_c = Discovery;\nexport default Discovery;\nvar _c;\n$RefreshReg$(_c, \"Discovery\");","map":{"version":3,"names":["React","useContext","useSelector","LanguageContext","Translations","jsxDEV","_jsxDEV","Discovery","_s","console","log","language","dict","className","children","discoveryTextD","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/LowerZoneComponents/Discovery.js"],"sourcesContent":["import React, {useContext} from 'react';\nimport \"../componentsStyles/LowerZone.css\";\n\nimport { useSelector} from 'react-redux';\nimport { LanguageContext}  from \"../contexts/LanguageContext\";\nimport Translations from \"../constants/Translations\";\n\n\nfunction Discovery() {\nconsole.log('We are in Discovery');\n    const {language} = useContext(LanguageContext);\nconsole.log(language);\n    const dict = Translations(language);\n\n    // Witch language ? So witch dictionary ?\n\n    return (\n        <div className=\"content-container\">\n            <p> {dict.discoveryTextD} </p>\n        </div>\n    );\n}\n\nexport default Discovery;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,OAAO,mCAAmC;AAE1C,SAASC,WAAW,QAAO,aAAa;AACxC,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACrBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAC9B,MAAM;IAACC;EAAQ,CAAC,GAAGV,UAAU,CAACE,eAAe,CAAC;EAClDM,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EACjB,MAAMC,IAAI,GAAGR,YAAY,CAACO,QAAQ,CAAC;;EAEnC;;EAEA,oBACIL,OAAA;IAAKO,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9BR,OAAA;MAAAQ,QAAA,GAAG,GAAC,EAACF,IAAI,CAACG,cAAc,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEd;AAACX,EAAA,CAbQD,SAAS;AAAAa,EAAA,GAATb,SAAS;AAelB,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}