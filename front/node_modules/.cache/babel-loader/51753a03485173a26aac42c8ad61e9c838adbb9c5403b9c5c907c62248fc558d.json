{"ast":null,"code":"var _jsxFileName = \"/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/subComponents/LanguageButton.js\",\n  _s = $RefreshSig$();\n// LanguageButton.js\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLanguage } from '../redux/languageSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguageButton() {\n  _s();\n  const dispatch = useDispatch();\n  const language = useSelector(state => state.setLanguage);\n  const changeLanguage = () => {\n    let newLanguage = 'English';\n    if (language === 'English') {\n      newLanguage = 'French';\n    } else if (language === 'French') {\n      newLanguage = 'Spanish';\n    } else {\n      newLanguage = 'English';\n    }\n    dispatch(setLanguage(newLanguage));\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: changeLanguage,\n    children: [\"Change Language (Current: \", language, \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(LanguageButton, \"NahXDxQJrvkTVkcNPX5bvmaG0nI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LanguageButton;\n;\nexport default LanguageButton;\nvar _c;\n$RefreshReg$(_c, \"LanguageButton\");","map":{"version":3,"names":["React","useDispatch","useSelector","setLanguage","jsxDEV","_jsxDEV","LanguageButton","_s","dispatch","language","state","changeLanguage","newLanguage","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/subComponents/LanguageButton.js"],"sourcesContent":["// LanguageButton.js\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {setLanguage} from '../redux/languageSlice';\n\n\nfunction LanguageButton() {\n    const dispatch = useDispatch();\n    const language = useSelector(state => state.setLanguage);\n\n    const changeLanguage = () => {\n       let newLanguage = 'English';\n        if (language === 'English') {\n           newLanguage = 'French';\n       } else if (language === 'French') {\n           newLanguage = 'Spanish';\n       } else {\n           newLanguage = 'English';\n        }\n        dispatch(setLanguage(newLanguage));\n    };\n\n    return (\n        <button onClick={changeLanguage}>\n            Change Language (Current: {language})\n        </button>\n    );\n};\n\nexport default LanguageButton;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAQC,WAAW,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACP,WAAW,CAAC;EAExD,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC1B,IAAIC,WAAW,GAAG,SAAS;IAC1B,IAAIH,QAAQ,KAAK,SAAS,EAAE;MACzBG,WAAW,GAAG,QAAQ;IAC1B,CAAC,MAAM,IAAIH,QAAQ,KAAK,QAAQ,EAAE;MAC9BG,WAAW,GAAG,SAAS;IAC3B,CAAC,MAAM;MACHA,WAAW,GAAG,SAAS;IAC1B;IACAJ,QAAQ,CAACL,WAAW,CAACS,WAAW,CAAC,CAAC;EACtC,CAAC;EAED,oBACIP,OAAA;IAAQQ,OAAO,EAAEF,cAAe;IAAAG,QAAA,GAAC,4BACH,EAACL,QAAQ,EAAC,GACxC;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEjB;AAACX,EAAA,CArBQD,cAAc;EAAA,QACFL,WAAW,EACXC,WAAW;AAAA;AAAAiB,EAAA,GAFvBb,cAAc;AAqBtB;AAED,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}