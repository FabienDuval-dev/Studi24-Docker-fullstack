{"ast":null,"code":"var _jsxFileName = \"/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/subComponents/LanguageButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLanguage, getNextLanguage } from '../redux/languageSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyComponent() {\n  _s();\n  const dispatch = useDispatch();\n  const language = useSelector(state => state.language);\n  const [languageText, setLanguageText] = useState(ENGLISH);\n  const switchLanguage = () => {\n    const nextLanguage = getNextLanguage(language);\n    dispatch(setLanguage(nextLanguage));\n  };\n  useEffect(() => {\n    if (language === ENGLISH) {\n      setLanguageText('English');\n    } else if (language === FRENCH) {\n      setLanguageText('Fançais');\n    } else {\n      setLanguageText('Español');\n    }\n  }, [language]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: switchLanguage,\n    children: languageText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(MyComponent, \"4BkjJWYLxSQUUi2seLYUA3BXWRo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","setLanguage","getNextLanguage","jsxDEV","_jsxDEV","MyComponent","_s","dispatch","language","state","languageText","setLanguageText","ENGLISH","switchLanguage","nextLanguage","FRENCH","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/subComponents/LanguageButton.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {setLanguage, getNextLanguage} from '../redux/languageSlice';\n\n\nfunction MyComponent() {\n    const dispatch = useDispatch();\n    const language = useSelector(state => state.language);\n    const [languageText, setLanguageText] = useState(ENGLISH);\n\n    const switchLanguage = () => {\n        const nextLanguage = getNextLanguage(language);\n        dispatch(setLanguage(nextLanguage));\n    }\n\n    useEffect(() => {\n        if (language === ENGLISH) {\n            setLanguageText('English');\n        } else if (language === FRENCH) {\n            setLanguageText('Fançais');\n        } else {\n            setLanguageText('Español');\n        }\n    }, [language]);\n    return (\n        <button onClick={switchLanguage}>\n            {languageText}\n        </button>\n    );\n}\n\nexport default MyComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAQC,WAAW,EAAEC,eAAe,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpE,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,QAAQ,CAAC;EACrD,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAACe,OAAO,CAAC;EAEzD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAGZ,eAAe,CAACM,QAAQ,CAAC;IAC9CD,QAAQ,CAACN,WAAW,CAACa,YAAY,CAAC,CAAC;EACvC,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZ,IAAIU,QAAQ,KAAKI,OAAO,EAAE;MACtBD,eAAe,CAAC,SAAS,CAAC;IAC9B,CAAC,MAAM,IAAIH,QAAQ,KAAKO,MAAM,EAAE;MAC5BJ,eAAe,CAAC,SAAS,CAAC;IAC9B,CAAC,MAAM;MACHA,eAAe,CAAC,SAAS,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EACd,oBACIJ,OAAA;IAAQY,OAAO,EAAEH,cAAe;IAAAI,QAAA,EAC3BP;EAAY;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEjB;AAACf,EAAA,CAxBQD,WAAW;EAAA,QACCN,WAAW,EACXC,WAAW;AAAA;AAAAsB,EAAA,GAFvBjB,WAAW;AA0BpB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}