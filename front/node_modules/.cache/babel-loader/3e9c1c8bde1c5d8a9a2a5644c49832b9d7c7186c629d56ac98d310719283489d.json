{"ast":null,"code":"var _jsxFileName = \"/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/LowerZoneComponents/Home.js\",\n  _s = $RefreshSig$();\nimport \"../componentsStyles/LowerZone.css\";\nimport { Client } from '../modeledObjects/Client';\n// import bcrypt from 'bcryptjs';        // this is a mockup, the real bcrypt will be fetched from the backend\n\nimport '../componentsStyles/HomeStyle.css';\nimport { useDispatch } from 'react-redux';\nimport { userReducer } from '../redux/loginSlice';\nimport Translations from '../constants/Translations';\nimport React, { useState, useContext } from 'react';\nimport { LanguageContext } from \"../contexts/LanguageContext\";\nimport apiService from '../Controller/apiService';\nimport { useSelector } from 'react-redux';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const dispatch = useDispatch();\n  const language = useSelector(state => state.language.language);\n  //  const language = useContext(LanguageContext);\n  console.log('Actual language, dans useContext', language);\n  const dict = Translations(language);\n  const [client, setClient] = useState('');\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [email, setEmail] = useState('');\n  let [password, setPassword] = useState('');\n  const [id, setId] = useState('');\n  const [isLogged, setIsLogged] = useState('');\n\n  // If the client wants to log in, ask the backend if the client belongs to the database\n\n  const handleLogin = async () => {\n    try {\n      const clientInfo = {\n        name,\n        surname,\n        email,\n        password\n      };\n      const response = await apiService.checkedClient(clientInfo);\n      setIsLogged(true);\n    } catch (error) {\n      console.error('Error logging in:', error);\n    }\n  };\n\n  // Creation of a new client in the database\n\n  const handleCreateClient = async () => {\n    try {\n      let isAName = name !== '';\n      let isASurname = surname !== '';\n      let isAnEmail = email !== '';\n      let isAPassword = password !== '';\n      let isAllFieldsAreFilled = isAName && isASurname && isAnEmail && isAPassword;\n      if (!isAllFieldsAreFilled) {\n        alert('Please fill in all fields.');\n        return;\n      } else {\n        //  const hashedPassword = bcrypt.hashSync(password, 10);\n        // this line is replaced by a mockup Password\n        const hashedPassword = 'mockupPassword';\n        password = '';\n        const client = {\n          name,\n          surname,\n          email,\n          hashedPassword\n        };\n        const response = await apiService.createClient(client);\n        setClient(response.data);\n        dispatch(userReducer());\n      }\n    } catch (error) {\n      console.error('Error creating client:', error);\n    }\n  };\n  const handleDeleteClient = async id => {\n    try {\n      await apiService.deleteClient(id);\n      setClient(null);\n      dispatch(userReducer());\n    } catch (error) {\n      alert('Error deleting client:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-container vertical\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: client.name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Surname : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: client.surname,\n            onChange: e => setSurname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: client.email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: client.password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form-container horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button-submit\",\n        onClick: handleCreateClient,\n        children: \" Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button-submit\",\n        onClick: handleLogin,\n        children: \" Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"delete account\",\n        className: \"button-delete\",\n        onClick: handleDeleteClient,\n        children: \" Delete account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"fMRR1OZ+6UsvtyJ1AbAqumSsZPc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Client","useDispatch","userReducer","Translations","React","useState","useContext","LanguageContext","apiService","useSelector","axios","jsxDEV","_jsxDEV","Home","_s","dispatch","language","state","console","log","dict","client","setClient","name","setName","surname","setSurname","email","setEmail","password","setPassword","id","setId","isLogged","setIsLogged","handleLogin","clientInfo","response","checkedClient","error","handleCreateClient","isAName","isASurname","isAnEmail","isAPassword","isAllFieldsAreFilled","alert","hashedPassword","createClient","data","handleDeleteClient","deleteClient","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/LowerZoneComponents/Home.js"],"sourcesContent":["import \"../componentsStyles/LowerZone.css\";\nimport { Client } from '../modeledObjects/Client';\n// import bcrypt from 'bcryptjs';        // this is a mockup, the real bcrypt will be fetched from the backend\n\nimport '../componentsStyles/HomeStyle.css';\n\nimport { useDispatch } from 'react-redux';\nimport { userReducer} from '../redux/loginSlice';\nimport Translations from '../constants/Translations';\n\nimport React, {useState, useContext} from 'react';\nimport { LanguageContext}  from \"../contexts/LanguageContext\";\nimport apiService from '../Controller/apiService';\nimport { useSelector } from 'react-redux';\nimport axios from \"axios\";\n\n\nfunction Home() {\n\n    const dispatch = useDispatch();\n\n    const language = useSelector(state => state.language.language);\n  //  const language = useContext(LanguageContext);\n    console.log('Actual language, dans useContext', language);\n    const dict = Translations(language);\n\n    const [client, setClient] = useState('');\n    const [name, setName] = useState('');\n    const [surname, setSurname] = useState('');\n    const [email, setEmail] = useState('');\n    let [password, setPassword] = useState('');\n    const [id, setId] = useState('');\n    const [isLogged, setIsLogged] = useState('');\n\n            // If the client wants to log in, ask the backend if the client belongs to the database\n\n            const handleLogin = async () => {\n                try {\n                    const clientInfo = { name, surname, email, password };\n                    const response = await apiService.checkedClient(clientInfo);\n                    setIsLogged(true);\n                } catch (error) {\n                    console.error('Error logging in:', error);\n                }\n            };\n\n\n            // Creation of a new client in the database\n\n        const handleCreateClient = async () => {\n            try {\n                let isAName = name !== '';\n                let isASurname = surname !== '';\n                let isAnEmail = email !== '';\n                let isAPassword = password !== '';\n\n                let isAllFieldsAreFilled = isAName && isASurname && isAnEmail && isAPassword;\n\n                if (!isAllFieldsAreFilled) {\n                    alert('Please fill in all fields.');\n                    return;\n                } else {\n                    //  const hashedPassword = bcrypt.hashSync(password, 10);\n                    // this line is replaced by a mockup Password\n                    const hashedPassword = 'mockupPassword';\n                    password = '';\n                    const client = {name, surname, email, hashedPassword};\n                    const response = await apiService.createClient(client);\n                    setClient(response.data);\n                    dispatch(userReducer());\n                }\n            } catch (error) {\n                console.error('Error creating client:', error);\n            }\n        };\n\n\n\n    const handleDeleteClient = async (id) => {\n        try {\n            await apiService.deleteClient(id);\n            setClient(null);\n            dispatch(userReducer());\n        } catch (error) {\n            alert('Error deleting client:', error);\n        }\n    };\n\n    return (\n        <span className>\n            <div>\n                <form className=\"form-container vertical\">\n                    <label>\n                        Name : <input type=\"text\"\n                                      value={client.name}\n                                      onChange={e => setName(e.target.value)}/>\n                    </label>\n                    <label>\n                        Surname : <input type=\"text\"\n                                         value={client.surname}\n                                         onChange={e => setSurname(e.target.value)}/>\n                    </label>\n                    <label>\n                        Email : <input type=\"text\"\n                                       value={client.email}\n                                       onChange={e => setEmail(e.target.value)}/>\n                    </label>\n                    <label>\n                        Password : <input type=\"password\"\n                                          value={client.password}\n                                          onChange={e => setPassword(e.target.value)}/>\n                    </label>\n                </form>\n            </div>\n\n\n            <span className=\"form-container horizontal\">\n                        <button type=\"submit\"\n                                className='button-submit'\n                                onClick={handleCreateClient}> Sign up\n                        </button>\n                        <button type=\"submit\"\n                                className='button-submit'\n                                onClick={handleLogin}> Log in\n                        </button>\n                        <button type=\"delete account\"\n                                className=\"button-delete\"\n                                onClick={handleDeleteClient}> Delete account\n                        </button>\n            </span>\n        </span>\n    );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}