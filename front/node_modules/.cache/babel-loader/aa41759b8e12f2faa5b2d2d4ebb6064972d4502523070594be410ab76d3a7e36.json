{"ast":null,"code":"const Language = {\n  English: 'English',\n  French: 'French',\n  Spanish: 'Spanish'\n};\nconst initialState = {\n  language: Language.English,\n  isLogged: true,\n  client: {},\n  name: '',\n  surname: ''\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CLIENT:\n      return {\n        ...state,\n        client: action.payload\n      };\n\n    // The rest of your code...\n\n    case SET_LANGUAGE:\n      {\n        let newLanguage;\n        if (state.language === Language.English) {\n          newLanguage = Language.French;\n        } else if (state.language === Language.French) {\n          newLanguage = Language.Spanish;\n        } else {\n          newLanguage = Language.English;\n        }\n        return {\n          ...state,\n          language: newLanguage\n        };\n      }\n    case TOGGLE_AUTH:\n      return {\n        ...state,\n        isLogged: !state.isLogged\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["Language","English","French","Spanish","initialState","language","isLogged","client","name","surname","rootReducer","state","action","type","SET_CLIENT","payload","SET_LANGUAGE","newLanguage","TOGGLE_AUTH"],"sources":["/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/redux/reducers.js"],"sourcesContent":["const Language = {\n    English: 'English',\n    French: 'French',\n    Spanish: 'Spanish',\n};\n\nconst initialState = {\n    language: Language.English,\n    isLogged: true,\n    client: {},\n    name: '',\n    surname: '',\n};\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CLIENT:\n            return {\n                ...state,\n                client: action.payload,\n            };\n\n        // The rest of your code...\n\n        case SET_LANGUAGE: {\n            let newLanguage;\n            if (state.language === Language.English) {\n                newLanguage = Language.French;\n            } else if (state.language === Language.French) {\n                newLanguage = Language.Spanish;\n            } else {\n                newLanguage = Language.English;\n            }\n            return {\n                ...state,\n                language: newLanguage,\n            };\n        }\n\n        case TOGGLE_AUTH:\n            return {\n                ...state,\n                isLogged: !state.isLogged,\n            };\n\n        default:\n            return state;\n    }\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG;EACbC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAEL,QAAQ,CAACC,OAAO;EAC1BK,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,CAAC,CAAC;EACVC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKC,UAAU;MACX,OAAO;QACH,GAAGH,KAAK;QACRJ,MAAM,EAAEK,MAAM,CAACG;MACnB,CAAC;;IAEL;;IAEA,KAAKC,YAAY;MAAE;QACf,IAAIC,WAAW;QACf,IAAIN,KAAK,CAACN,QAAQ,KAAKL,QAAQ,CAACC,OAAO,EAAE;UACrCgB,WAAW,GAAGjB,QAAQ,CAACE,MAAM;QACjC,CAAC,MAAM,IAAIS,KAAK,CAACN,QAAQ,KAAKL,QAAQ,CAACE,MAAM,EAAE;UAC3Ce,WAAW,GAAGjB,QAAQ,CAACG,OAAO;QAClC,CAAC,MAAM;UACHc,WAAW,GAAGjB,QAAQ,CAACC,OAAO;QAClC;QACA,OAAO;UACH,GAAGU,KAAK;UACRN,QAAQ,EAAEY;QACd,CAAC;MACL;IAEA,KAAKC,WAAW;MACZ,OAAO;QACH,GAAGP,KAAK;QACRL,QAAQ,EAAE,CAACK,KAAK,CAACL;MACrB,CAAC;IAEL;MACI,OAAOK,KAAK;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}