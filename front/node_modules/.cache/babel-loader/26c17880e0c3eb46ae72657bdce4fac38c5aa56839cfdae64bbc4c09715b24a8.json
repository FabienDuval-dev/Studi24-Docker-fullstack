{"ast":null,"code":"var _jsxFileName = \"/Users/fabienduval/studi24Docker/front/src/LowerZoneComponents/QrCode.js\",\n  _s = $RefreshSig$();\nimport \"../componentsStyles/LowerZone.css\";\nimport \"../componentsStyles/QrCodeStyle.css\";\nimport imageQR from '../images/imageQrCodeExample.png';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QrCode() {\n  _s();\n  const name = useSelector(state => state.name);\n  const surname = useSelector(state => state.surname);\n  const email = useSelector(state => state.email);\n  const isLogged = useSelector(state => state.login); // Correction : renommer en isLogged pour plus de clarté\n\n  let qrCode = null; // this is a mockup, the real qrCode will be fetched from the backend\n\n  // Function to handle QR Code fetching\n  const handleGetQrCode = async () => {\n    try {\n      if (qrCode === null || !isLogged) {\n        alert('You must be logged in to get a QR Code. You also need to have bought a ticket.');\n      } else {\n        console.log('Here is your qrCode');\n        // Logic to fetch and display QR code from backend\n      }\n    } catch (error) {\n      console.error('Error fetching QR Code:', error);\n    }\n  };\n\n  // Function to display the ticket\n  const displayTicket = () => {\n    alert('Displaying ticket');\n  };\n\n  // Function to print the ticket\n  const printTicket = () => {\n    alert('Printing ticket');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageQR,\n      alt: \"QR Code\",\n      className: \"qrcode-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\" // Correction : type should be 'button' to prevent form submission behavior\n        ,\n        className: \"button-itself\",\n        onClick: displayTicket,\n        children: \"Display QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\" // Correction : type should be 'button' to prevent form submission behavior\n        ,\n        className: \"button-itself\",\n        onClick: printTicket,\n        children: \"Print Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(QrCode, \"ZkTA2cHxWywmkffA0JB8nQZNYvI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n_c = QrCode;\nexport default QrCode;\nvar _c;\n$RefreshReg$(_c, \"QrCode\");","map":{"version":3,"names":["imageQR","useSelector","jsxDEV","_jsxDEV","QrCode","_s","name","state","surname","email","isLogged","login","qrCode","handleGetQrCode","alert","console","log","error","displayTicket","printTicket","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/fabienduval/studi24Docker/front/src/LowerZoneComponents/QrCode.js"],"sourcesContent":["import \"../componentsStyles/LowerZone.css\";\nimport \"../componentsStyles/QrCodeStyle.css\";\nimport imageQR from '../images/imageQrCodeExample.png';\n\nimport { useSelector } from 'react-redux';\n\nfunction QrCode() {\n\n    const name = useSelector(state => state.name);\n    const surname = useSelector(state => state.surname);\n    const email = useSelector(state => state.email);\n    const isLogged = useSelector(state => state.login); // Correction : renommer en isLogged pour plus de clarté\n\n    let qrCode = null; // this is a mockup, the real qrCode will be fetched from the backend\n\n    // Function to handle QR Code fetching\n    const handleGetQrCode = async () => {\n        try {\n            if (qrCode === null || !isLogged) {\n                alert('You must be logged in to get a QR Code. You also need to have bought a ticket.');\n            } else {\n                console.log('Here is your qrCode');\n                // Logic to fetch and display QR code from backend\n            }\n        } catch (error) {\n            console.error('Error fetching QR Code:', error);\n        }\n    };\n\n    // Function to display the ticket\n    const displayTicket = () => {\n        alert('Displaying ticket');\n    };\n\n    // Function to print the ticket\n    const printTicket = () => {\n        alert('Printing ticket');\n    };\n\n    return (\n        <div className='form-container'>\n            <img src={imageQR} alt=\"QR Code\" className=\"qrcode-container\" />\n            <div className='button-container'>\n                <button type='button' // Correction : type should be 'button' to prevent form submission behavior\n                        className='button-itself'\n                        onClick={displayTicket}>Display QR Code</button>\n\n                <button type='button' // Correction : type should be 'button' to prevent form submission behavior\n                        className='button-itself'\n                        onClick={printTicket}>Print Ticket</button>\n            </div>\n        </div>\n    );\n}\n\nexport default QrCode;"],"mappings":";;AAAA,OAAO,mCAAmC;AAC1C,OAAO,qCAAqC;AAC5C,OAAOA,OAAO,MAAM,kCAAkC;AAEtD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAMC,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAI,CAAC;EAC7C,MAAME,OAAO,GAAGP,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC;EACnD,MAAMC,KAAK,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACE,KAAK,CAAC;EAC/C,MAAMC,QAAQ,GAAGT,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACI,KAAK,CAAC,CAAC,CAAC;;EAEpD,IAAIC,MAAM,GAAG,IAAI,CAAC,CAAC;;EAEnB;EACA,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,IAAID,MAAM,KAAK,IAAI,IAAI,CAACF,QAAQ,EAAE;QAC9BI,KAAK,CAAC,gFAAgF,CAAC;MAC3F,CAAC,MAAM;QACHC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClC;MACJ;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBJ,KAAK,CAAC,mBAAmB,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACtBL,KAAK,CAAC,iBAAiB,CAAC;EAC5B,CAAC;EAED,oBACIX,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BlB,OAAA;MAAKmB,GAAG,EAAEtB,OAAQ;MAACuB,GAAG,EAAC,SAAS;MAACH,SAAS,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChExB,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BlB,OAAA;QAAQyB,IAAI,EAAC,QAAQ,CAAC;QAAA;QACdR,SAAS,EAAC,eAAe;QACzBS,OAAO,EAAEX,aAAc;QAAAG,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAExDxB,OAAA;QAAQyB,IAAI,EAAC,QAAQ,CAAC;QAAA;QACdR,SAAS,EAAC,eAAe;QACzBS,OAAO,EAAEV,WAAY;QAAAE,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACtB,EAAA,CA/CQD,MAAM;EAAA,QAEEH,WAAW,EACRA,WAAW,EACbA,WAAW,EACRA,WAAW;AAAA;AAAA6B,EAAA,GALvB1B,MAAM;AAiDf,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}