{"ast":null,"code":"import\"../componentsStyles/LowerZone.css\";// import bcrypt from 'bcryptjs'; // this is a mockup, the real bcrypt will be fetched from the backend\nimport'../componentsStyles/HomeStyle.css';import{useDispatch}from'react-redux';import{userReducer}from'../redux/loginSlice.js';import React,{useState}from'react';import apiService from'../Controller/apiService.js';import{useSelector}from'react-redux';import dictEnglish from\"../constants/Translations.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){const dispatch=useDispatch();const dict=dictEnglish;const[client,setClient]=useState(null);const[name,setName]=useState('');const[surname,setSurname]=useState('');const[email,setEmail]=useState('');let[password,setPassword]=useState('');const[isLogged,setIsLogged]=useState(false);// If the client wants to log in, ask the backend if the client belongs to the database\nconst handleLogin=async()=>{try{const clientInfo={email,password};const response=await apiService.checkClient(clientInfo);setIsLogged(true);setClient(response.data);}catch(error){console.error('Error logging in:',error);}};// Creation of a new client in the database\nconst handleCreateClient=async()=>{try{let isAName=name!=='';let isASurname=surname!=='';let isAnEmail=email!=='';let isAPassword=password!=='';let isAllFieldsAreFilled=isAName&&isASurname&&isAnEmail&&isAPassword;if(!isAllFieldsAreFilled){alert('Please fill in all fields.');return;}else{//  const hashedPassword = bcrypt.hashSync(password, 10);\n// this line is replaced by a mockup Password\nconst hashedPassword='mockupPassword';password='';const client={name,surname,email,hashedPassword};const response=await apiService.createClient(client);setClient(response.data);dispatch(userReducer());}}catch(error){console.error('Error creating client:',error);}};const handleDeleteClient=async()=>{try{if(!client||!client.id){alert('Client not logged in.');return;}await apiService.deleteClient(client.id);setClient(null);dispatch(userReducer());}catch(error){alert('Error deleting client:',error);}};return/*#__PURE__*/_jsxs(\"span\",{className:\"home-container\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"form-container vertical\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Name: \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:e=>setName(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Surname: \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:surname,onChange:e=>setSurname(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Email: \",/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Password: \",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value)})]})]})}),/*#__PURE__*/_jsxs(\"span\",{className:\"form-container horizontal\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"button-submit\",onClick:handleCreateClient,children:\" Sign up\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"button-submit\",onClick:handleLogin,children:\" Log in\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"button-delete\",onClick:handleDeleteClient,children:\" Delete account\"})]})]});}export default Home;","map":{"version":3,"names":["useDispatch","userReducer","React","useState","apiService","useSelector","dictEnglish","jsx","_jsx","jsxs","_jsxs","Home","dispatch","dict","client","setClient","name","setName","surname","setSurname","email","setEmail","password","setPassword","isLogged","setIsLogged","handleLogin","clientInfo","response","checkClient","data","error","console","handleCreateClient","isAName","isASurname","isAnEmail","isAPassword","isAllFieldsAreFilled","alert","hashedPassword","createClient","handleDeleteClient","id","deleteClient","className","children","type","value","onChange","e","target","onClick"],"sources":["/Users/fabienduval/IdeaProjects/front/src/LowerZoneComponents/Home.js"],"sourcesContent":["import \"../componentsStyles/LowerZone.css\";\n// import bcrypt from 'bcryptjs'; // this is a mockup, the real bcrypt will be fetched from the backend\nimport '../componentsStyles/HomeStyle.css';\n\nimport { useDispatch } from 'react-redux';\nimport { userReducer } from '../redux/loginSlice.js';\n\nimport React, { useState } from 'react';\nimport apiService from '../Controller/apiService.js';\nimport { useSelector } from 'react-redux';\nimport dictEnglish from \"../constants/Translations.js\";\n\nfunction Home() {\n    const dispatch = useDispatch();\n    const dict = dictEnglish;\n\n    const [client, setClient] = useState(null);\n    const [name, setName] = useState('');\n    const [surname, setSurname] = useState('');\n    const [email, setEmail] = useState('');\n    let [password, setPassword] = useState('');\n    const [isLogged, setIsLogged] = useState(false);\n\n    // If the client wants to log in, ask the backend if the client belongs to the database\n    const handleLogin = async () => {\n        try {\n            const clientInfo = { email, password };\n            const response = await apiService.checkClient(clientInfo);\n            setIsLogged(true);\n            setClient(response.data);\n        } catch (error) {\n            console.error('Error logging in:', error);\n        }\n    };\n\n    // Creation of a new client in the database\n    const handleCreateClient = async () => {\n        try {\n            let isAName = name !== '';\n            let isASurname = surname !== '';\n            let isAnEmail = email !== '';\n            let isAPassword = password !== '';\n\n            let isAllFieldsAreFilled = isAName && isASurname && isAnEmail && isAPassword;\n\n            if (!isAllFieldsAreFilled) {\n                alert('Please fill in all fields.');\n                return;\n            } else {\n                //  const hashedPassword = bcrypt.hashSync(password, 10);\n                // this line is replaced by a mockup Password\n                const hashedPassword = 'mockupPassword';\n                password = '';\n                const client = { name, surname, email, hashedPassword };\n                const response = await apiService.createClient(client);\n                setClient(response.data);\n                dispatch(userReducer());\n            }\n        } catch (error) {\n            console.error('Error creating client:', error);\n        }\n    };\n\n    const handleDeleteClient = async () => {\n        try {\n            if (!client || !client.id) {\n                alert('Client not logged in.');\n                return;\n            }\n            await apiService.deleteClient(client.id);\n            setClient(null);\n            dispatch(userReducer());\n        } catch (error) {\n            alert('Error deleting client:', error);\n        }\n    };\n\n    return (\n        <span className=\"home-container\">\n            <div>\n                <form className=\"form-container vertical\">\n                    <label>\n                        Name: <input type=\"text\"\n                                     value={name}\n                                     onChange={e => setName(e.target.value)} />\n                    </label>\n                    <label>\n                        Surname: <input type=\"text\"\n                                        value={surname}\n                                        onChange={e => setSurname(e.target.value)} />\n                    </label>\n                    <label>\n                        Email: <input type=\"email\"\n                                      value={email}\n                                      onChange={e => setEmail(e.target.value)} />\n                    </label>\n                    <label>\n                        Password: <input type=\"password\"\n                                         value={password}\n                                         onChange={e => setPassword(e.target.value)} />\n                    </label>\n                </form>\n            </div>\n\n            <span className=\"form-container horizontal\">\n                <button type=\"button\"\n                        className='button-submit'\n                        onClick={handleCreateClient}> Sign up\n                </button>\n                <button type=\"button\"\n                        className='button-submit'\n                        onClick={handleLogin}> Log in\n                </button>\n                <button type=\"button\"\n                        className=\"button-delete\"\n                        onClick={handleDeleteClient}> Delete account\n                </button>\n            </span>\n        </span>\n    );\n}\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}