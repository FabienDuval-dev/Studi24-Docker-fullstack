{"ast":null,"code":"var _jsxFileName = \"/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/LowerZoneComponents/QrCode.js\",\n  _s = $RefreshSig$();\nimport \"../componentsStyles/LowerZone.css\";\nimport \"../componentsStyles/QrCodeStyle.css\";\nimport imageQR from '../images/imageQrCodeExample.png';\nimport { useActualDict } from '../constants/Translations';\nimport axios from 'axios';\nimport apiService from '../Controller/apiService.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from \"react\";\nimport { setName } from '../redux/nameSlice';\nimport { setSurname } from '../redux/surnameSlice';\nimport { setEmail } from '../redux/emailSlice';\nimport { login } from '../redux/loginSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QrCode() {\n  _s();\n  const name = useSelector(state => state.name);\n  const surname = useSelector(state => state.surname);\n  const email = useSelector(state => state.email);\n  const login = useSelector(state => state.login);\n  let qrCode = null; // this is a mockup, the real qrCode will be fetched from the backend\n\n  const handleGetQrCode = async () => {\n    try {\n      if (qrCode === null || login === false) {\n        alert('You must be logged in to get a QR Code. You have to bought a ticket, too.');\n      } else {\n        console.log('Here is your qrCode');\n      }\n    } catch (error) {\n      console.error('Error creating client:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: name.qrCode,\n      alt: \"QR Code\",\n      className: \"qrcode-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button-itself\",\n        children: \"Display QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button-itself\",\n        children: \"Print Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(QrCode, \"aOzBZjAUl4rMuvD9mN26CBNd5tU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n_c = QrCode;\nexport default QrCode;\nvar _c;\n$RefreshReg$(_c, \"QrCode\");","map":{"version":3,"names":["imageQR","useActualDict","axios","apiService","useSelector","useDispatch","useState","setName","setSurname","setEmail","login","jsxDEV","_jsxDEV","QrCode","_s","name","state","surname","email","qrCode","handleGetQrCode","alert","console","log","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/LowerZoneComponents/QrCode.js"],"sourcesContent":["import \"../componentsStyles/LowerZone.css\";\nimport \"../componentsStyles/QrCodeStyle.css\";\nimport imageQR from '../images/imageQrCodeExample.png';\n\nimport {useActualDict} from '../constants/Translations';\n\nimport axios from 'axios';\nimport apiService from '../Controller/apiService.js';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {useState} from \"react\";\nimport {setName} from '../redux/nameSlice';\nimport {setSurname} from '../redux/surnameSlice';\nimport {setEmail} from '../redux/emailSlice';\nimport {login} from '../redux/loginSlice';\n\n\nfunction QrCode() {\n\n    const name = useSelector(state => state.name);\n    const surname = useSelector(state => state.surname);\n    const email = useSelector(state => state.email);\n    const login = useSelector(state => state.login);\n\n    let qrCode = null;        // this is a mockup, the real qrCode will be fetched from the backend\n\n\n    const handleGetQrCode = async () => {\n        try {\n            if ((qrCode === null) || (login === false)) {\n                alert('You must be logged in to get a QR Code. You have to bought a ticket, too.');\n            } else {\n                console.log('Here is your qrCode');\n            }\n        } catch (error) {\n            console.error('Error creating client:', error);\n        }\n    }\n\n\n\n        return (\n\n        <div className='form-container'>\n            <img src={name.qrCode} alt=\"QR Code\" className=\"qrcode-container\"/>\n            <div className='button-container'>\n                <button type='submit' className='button-itself'>Display QR Code</button>\n                <button type='submit' className='button-itself'>Print Ticket</button>\n            </div>\n        </div>\n    );\n}\n\nexport default QrCode;\n"],"mappings":";;AAAA,OAAO,mCAAmC;AAC1C,OAAO,qCAAqC;AAC5C,OAAOA,OAAO,MAAM,kCAAkC;AAEtD,SAAQC,aAAa,QAAO,2BAA2B;AAEvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,6BAA6B;AAEpD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,OAAO,QAAO,oBAAoB;AAC1C,SAAQC,UAAU,QAAO,uBAAuB;AAChD,SAAQC,QAAQ,QAAO,qBAAqB;AAC5C,SAAQC,KAAK,QAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAMC,IAAI,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,IAAI,CAAC;EAC7C,MAAME,OAAO,GAAGb,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC;EACnD,MAAMC,KAAK,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACE,KAAK,CAAC;EAC/C,MAAMR,KAAK,GAAGN,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACN,KAAK,CAAC;EAE/C,IAAIS,MAAM,GAAG,IAAI,CAAC,CAAQ;;EAG1B,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,IAAKD,MAAM,KAAK,IAAI,IAAMT,KAAK,KAAK,KAAM,EAAE;QACxCW,KAAK,CAAC,2EAA2E,CAAC;MACtF,CAAC,MAAM;QACHC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACtC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAIG,oBAEAZ,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3Bd,OAAA;MAAKe,GAAG,EAAEZ,IAAI,CAACI,MAAO;MAACS,GAAG,EAAC,SAAS;MAACH,SAAS,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnEpB,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7Bd,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxEpB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClB,EAAA,CAlCQD,MAAM;EAAA,QAEET,WAAW,EACRA,WAAW,EACbA,WAAW,EACXA,WAAW;AAAA;AAAA8B,EAAA,GALpBrB,MAAM;AAoCf,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}