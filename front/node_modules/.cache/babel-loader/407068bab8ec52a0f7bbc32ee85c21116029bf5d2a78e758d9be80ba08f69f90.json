{"ast":null,"code":"var _jsxFileName = \"/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/subComponents/LanguageButton.js\",\n  _s = $RefreshSig$();\n// LanguageButton.js\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLanguage } from '../redux/languageSlice';\nimport { ENGLISH, FRENCH, SPANISH } from \"../constants/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguageButton() {\n  _s();\n  const dispatch = useDispatch();\n  const language = useSelector(state => state.language);\n  const changeLanguage = () => {\n    let theNextLanguage = language;\n    switch (theNextLanguage) {\n      case FRENCH:\n        theNextLanguage = ENGLISH;\n        break;\n      case ENGLISH:\n        theNextLanguage = SPANISH;\n        break;\n      case SPANISH:\n        theNextLanguage = FRENCH;\n        break;\n      default:\n        theNextLanguage = ENGLISH;\n    }\n    dispatch(setLanguage(theNextLanguage));\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: changeLanguage,\n    children: [\"Change Language (Current: \", language.payload === ENGLISH ? 'English' : language.payload === FRENCH ? 'French' : 'Spanish', \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(LanguageButton, \"NahXDxQJrvkTVkcNPX5bvmaG0nI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LanguageButton;\n;\nexport default LanguageButton;\nvar _c;\n$RefreshReg$(_c, \"LanguageButton\");","map":{"version":3,"names":["React","useDispatch","useSelector","setLanguage","ENGLISH","FRENCH","SPANISH","jsxDEV","_jsxDEV","LanguageButton","_s","dispatch","language","state","changeLanguage","theNextLanguage","onClick","children","payload","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fabienduval/WebstormProjects/studi-exam-frontend-react/src/subComponents/LanguageButton.js"],"sourcesContent":["\n// LanguageButton.js\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setLanguage} from '../redux/languageSlice';\nimport {ENGLISH, FRENCH, SPANISH} from \"../constants/constants\";\n\nfunction LanguageButton() {\n    const dispatch = useDispatch();\n    const language = useSelector(state => state.language);\n\n    const changeLanguage = () => {\n        let theNextLanguage = language;\n        switch(theNextLanguage) {\n            case FRENCH:\n                theNextLanguage = ENGLISH;\n                break;\n            case ENGLISH:\n                theNextLanguage = SPANISH;\n                break;\n            case SPANISH:\n                theNextLanguage = FRENCH;\n                break;\n            default:\n                theNextLanguage = ENGLISH;\n        }\n        dispatch(setLanguage(theNextLanguage));\n    };\n\n    return (\n        <button onClick={changeLanguage}>\n            Change Language (Current: {language.payload === ENGLISH ? 'English' : language.payload === FRENCH ? 'French' : 'Spanish'})\n        </button>\n    );\n};\nexport default LanguageButton;"],"mappings":";;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,WAAW,QAAO,wBAAwB;AAClD,SAAQC,OAAO,EAAEC,MAAM,EAAEC,OAAO,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,QAAQ,CAAC;EAErD,MAAME,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIC,eAAe,GAAGH,QAAQ;IAC9B,QAAOG,eAAe;MAClB,KAAKV,MAAM;QACPU,eAAe,GAAGX,OAAO;QACzB;MACJ,KAAKA,OAAO;QACRW,eAAe,GAAGT,OAAO;QACzB;MACJ,KAAKA,OAAO;QACRS,eAAe,GAAGV,MAAM;QACxB;MACJ;QACIU,eAAe,GAAGX,OAAO;IACjC;IACAO,QAAQ,CAACR,WAAW,CAACY,eAAe,CAAC,CAAC;EAC1C,CAAC;EAED,oBACIP,OAAA;IAAQQ,OAAO,EAAEF,cAAe;IAAAG,QAAA,GAAC,4BACH,EAACL,QAAQ,CAACM,OAAO,KAAKd,OAAO,GAAG,SAAS,GAAGQ,QAAQ,CAACM,OAAO,KAAKb,MAAM,GAAG,QAAQ,GAAG,SAAS,EAAC,GAC7H;EAAA;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEjB;AAACZ,EAAA,CA3BQD,cAAc;EAAA,QACFR,WAAW,EACXC,WAAW;AAAA;AAAAqB,EAAA,GAFvBd,cAAc;AA2BtB;AACD,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}